{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12","program":"/Users/raghav/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bootloader","--edition=2018","/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=6d68c3220bd1f493","-C","extra-filename=-6d68c3220bd1f493","--out-dir","/Users/raghav/OneDrive/Coding/OSDevelopment/RaghavOS-in-Rust/raghav_os/target/rls/debug/deps","-L","dependency=/Users/raghav/OneDrive/Coding/OSDevelopment/RaghavOS-in-Rust/raghav_os/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/raghav/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/raghav/OneDrive/Coding/OSDevelopment/RaghavOS-in-Rust/raghav_os/target/rls/debug/deps/libbootloader-6d68c3220bd1f493.rmeta"},"prelude":{"crate_id":{"name":"bootloader","disambiguator":[11231660992485859008,0]},"crate_root":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src","external_crates":[{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5144719228131161490,0]}},{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[14035776053001568599,0]}},{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[9309021193983882085,0]}}],"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":0,"byte_end":6056,"line_start":1,"line_end":128,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":4149,"byte_end":4157,"line_start":73,"line_end":73,"column_start":27,"column_end":35},"alias_span":null,"name":"BootInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":4182,"byte_end":4188,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":0,"byte_end":6056,"line_start":1,"line_end":128,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":48}],"decl_id":null,"docs":"An experimental x86_64 bootloader that works on both BIOS and UEFI systems.","sig":null,"attributes":[{"value":"*\nAn experimental x86_64 bootloader that works on both BIOS and UEFI systems.\n\nTo use this crate, specify it as a dependency in the `Cargo.toml` of your operating system\nkernel. Then you can use the [`entry_point`] macro to mark your entry point function. This\ngives you access to the [`BootInfo`] struct, which is passed by the bootloader.\n\n## Disk Image Creation\n\nIncluding the `bootloader` crate as a dependency makes the kernel binary suitable for booting,\nbut does not create any bootable disk images. To create them, two additional steps are needed:\n\n1. **Locate the source code of the `bootloader` dependency** on your local system. By using the\n   dependency source code directly, we ensure that the kernel and bootloader use the same version\n   of the [`BootInfo`] struct.\n    - When creating a builder binary written in Rust, the\n      [`bootloader_locator`](https://docs.rs/bootloader-locator/0.0.4/bootloader_locator/) crate can\n      be used to automate this step.\n    - Otherwise, the\n      [`cargo metadata`](https://doc.rust-lang.org/cargo/commands/cargo-metadata.html) subcommand\n      can be used to locate the dependency. The command outputs a JSON object with various metadata\n      for the current package. To find the `bootloader` source path in it, first look for the\n      \"bootloader\" dependency under `resolve.nodes.deps` to find out its ID (in the `pkg` field).\n      Then use that ID to find the bootloader in `packages`. Its `manifest_path` field contains the\n      local path to the `Cargo.toml` of the bootloader.\n2. **Run the following command** in the source code directory of the `bootloader` dependency to create\n   the bootable disk images:\n\n    ```notrust\n    cargo builder --kernel-manifest path/to/kernel/Cargo.toml --kernel-binary path/to/kernel_bin\n    ```\n\n    The `--kernel-manifest` argument should point to the `Cargo.toml` of your kernel. It is used\n    for applying configuration settings. The `--kernel-binary` argument should point to the kernel\n    executable that should be used for the bootable disk images.\n\n    In addition to the `--kernel-manifest` and `--kernel-binary` arguments, it is recommended to also\n    set the `--target-dir` and `--out-dir` arguments. The former specifies the directory that should\n    used for cargo build artifacts and the latter specfies the directory where the resulting disk\n    images should be placed. It is recommended to set `--target-dir` to the `target` folder of your\n    kernel and `--out-dir` to the the parent folder of `--kernel-binary`.\n\nThis will result in the following files, which are placed in the specified `--out-dir`:\n\n- A disk image suitable for BIOS booting, named `boot-bios-<kernel>.img`, where `<kernel>` is the\n  name of your kernel executable. This image can be started in QEMU or booted on a real machine\n  after burning it to an USB stick..\n- A disk image suitable for UEFI booting, named `boot-uefi-<kernel>.img`. Like the BIOS disk image,\n  this can be started in QEMU (requires OVMF) and burned to an USB stick to run it on a real\n  machine.\n- Intermediate UEFI files\n  - A FAT partition image named `boot-uefi-<kernel>.fat`, which can be directly started in QEMU\n    or written as an EFI system partition to a GPT-formatted disk.\n  - An EFI file named `boot-uefi-<kernel>.efi`. This executable is the combination of the\n    bootloader and kernel executables. It can be started in QEMU or used to construct a bootable\n    disk image: Create an EFI system partition formatted with the FAT filesystem and place the\n    EFI file under `efi\\boot\\bootx64.efi` on that filesystem.\n\n**You can find some examples that implement the above steps [in our GitHub repo](https://github.com/rust-osdev/bootloader/tree/main/examples).**\n\n## Configuration\n\nThe bootloader can be configured through a `[package.metadata.bootloader]` table in the\n`Cargo.toml` of the kernel (the one passed as `--kernel-manifest`). See the [`Config`] struct\nfor all possible configuration options.\n*/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":0,"byte_end":3985,"line_start":1,"line_end":66,"column_start":1,"column_end":3}},{"value":"no_std","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":4025,"byte_end":4031,"line_start":68,"line_end":68,"column_start":39,"column_end":45}},{"value":"feature(maybe_uninit_slice)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":4034,"byte_end":4065,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"deny(unsafe_op_in_unsafe_fn)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":4066,"byte_end":4098,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":4099,"byte_end":4121,"line_start":71,"line_end":71,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7455,"byte_end":7461,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::Config","value":"Config { map_physical_memory, physical_memory_offset, map_page_table_recursively, aslr, recursive_index, kernel_stack_size, kernel_stack_address, boot_info_address, map_framebuffer, framebuffer_address, minimum_framebuffer_height, minimum_framebuffer_width }","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" Allows configuring the bootloader behavior.","sig":null,"attributes":[{"value":"/ Allows configuring the bootloader behavior.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6115,"byte_end":6162,"line_start":4,"line_end":4,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6163,"byte_end":6166,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ To control these, use a `[package.metadata.bootloader]` table in the `Cargo.toml` of","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6167,"byte_end":6255,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/ your kernel. The naming convention for all config fields is `kebab-case`, otherwise the","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6256,"byte_end":6347,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ config keys correspond to the field names of this struct (i.e. just replace `_` with `-`).","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6348,"byte_end":6442,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ Unknown config keys lead to an error.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6443,"byte_end":6484,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6485,"byte_end":6488,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6489,"byte_end":6503,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6504,"byte_end":6507,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ To map the complete physical memory starting at virtual address `0x0000_4000_0000_0000`, add","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6508,"byte_end":6604,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ the following to your kernel's `Cargo.toml`:","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6605,"byte_end":6653,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6654,"byte_end":6657,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6658,"byte_end":6669,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ [package.metadata.bootloader]","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6670,"byte_end":6703,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ map-physical-memory = true","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6704,"byte_end":6734,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ physical-memory-offset = 0x0000_4000_0000_0000","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6735,"byte_end":6785,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6786,"byte_end":6793,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6794,"byte_end":6797,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## Memory Addresses","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6798,"byte_end":6821,"line_start":22,"line_end":22,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6822,"byte_end":6825,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Memory addresses must be positive and page aligned. Since TOML does not support unsigned 64-bit","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6826,"byte_end":6925,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/ integers, we also support string input to specify addresses larger than `i64::MAX`. For example:","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":6926,"byte_end":7026,"line_start":25,"line_end":25,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7027,"byte_end":7030,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7031,"byte_end":7042,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ physical-memory-offset = \"0xf000_0000_0000_0000\"","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7043,"byte_end":7095,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7096,"byte_end":7103,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7104,"byte_end":7107,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The above example would fail if the address was specified as integer instead (i.e. without","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7108,"byte_end":7202,"line_start":31,"line_end":31,"column_start":1,"column_end":95}},{"value":"/ the quotes).","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7203,"byte_end":7219,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7220,"byte_end":7223,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ All memory addresses are optional, even if their corresponding switch is enabled. If no","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7224,"byte_end":7315,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ address is specified, the bootloader will choose an unused entry of the level 4 page table","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7316,"byte_end":7410,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ at runtime.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7411,"byte_end":7426,"line_start":36,"line_end":36,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":50},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7586,"byte_end":7605,"line_start":42,"line_end":42,"column_start":9,"column_end":28},"name":"map_physical_memory","qualname":"::config::Config::map_physical_memory","value":"bool","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Whether to create a virtual mapping of the complete physical memory.","sig":null,"attributes":[{"value":"/ Whether to create a virtual mapping of the complete physical memory.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7468,"byte_end":7540,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7545,"byte_end":7548,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7553,"byte_end":7577,"line_start":41,"line_end":41,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":51},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7847,"byte_end":7869,"line_start":48,"line_end":48,"column_start":9,"column_end":31},"name":"physical_memory_offset","qualname":"::config::Config::physical_memory_offset","value":"core::option::Option<u64>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Map the physical memory at a specified virtual address.","sig":null,"attributes":[{"value":"/ Map the physical memory at a specified virtual address.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7617,"byte_end":7676,"line_start":43,"line_end":43,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7681,"byte_end":7684,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If not given, the bootloader searches for a free virtual address dynamically.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7689,"byte_end":7770,"line_start":45,"line_end":45,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7775,"byte_end":7778,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Only considered if `map_physical_memory` is `true`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7783,"byte_end":7838,"line_start":47,"line_end":47,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":52},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8000,"byte_end":8026,"line_start":52,"line_end":52,"column_start":9,"column_end":35},"name":"map_page_table_recursively","qualname":"::config::Config::map_page_table_recursively","value":"bool","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Whether to create a recursive entry in the level 4 page table.","sig":null,"attributes":[{"value":"/ Whether to create a recursive entry in the level 4 page table.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7888,"byte_end":7954,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7959,"byte_end":7962,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":7967,"byte_end":7991,"line_start":51,"line_end":51,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":53},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8261,"byte_end":8265,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"name":"aslr","qualname":"::config::Config::aslr","value":"bool","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Whether to randomize non-statically configured addresses.\n The kernel base address will be randomized when it's compiled as\n a position independent executable.","sig":null,"attributes":[{"value":"/ Whether to randomize non-statically configured addresses.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8038,"byte_end":8099,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"/ The kernel base address will be randomized when it's compiled as","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8104,"byte_end":8172,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ a position independent executable.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8177,"byte_end":8215,"line_start":55,"line_end":55,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8220,"byte_end":8223,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8228,"byte_end":8252,"line_start":57,"line_end":57,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":54},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8534,"byte_end":8549,"line_start":64,"line_end":64,"column_start":9,"column_end":24},"name":"recursive_index","qualname":"::config::Config::recursive_index","value":"core::option::Option<u16>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Create the recursive mapping in at the given entry of the level 4 page table.","sig":null,"attributes":[{"value":"/ Create the recursive mapping in at the given entry of the level 4 page table.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8277,"byte_end":8358,"line_start":59,"line_end":59,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8363,"byte_end":8366,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If not given, the bootloader searches for a free level 4 entry dynamically.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8371,"byte_end":8450,"line_start":61,"line_end":61,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8455,"byte_end":8458,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Only considered if `map_page_table_recursively` is `true`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8463,"byte_end":8525,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":55},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8678,"byte_end":8695,"line_start":68,"line_end":68,"column_start":9,"column_end":26},"name":"kernel_stack_size","qualname":"::config::Config::kernel_stack_size","value":"core::option::Option<u64>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Use the given stack size for the kernel.","sig":null,"attributes":[{"value":"/ Use the given stack size for the kernel.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8568,"byte_end":8612,"line_start":65,"line_end":65,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8617,"byte_end":8620,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Defaults to at least 80KiB if not given.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8625,"byte_end":8669,"line_start":67,"line_end":67,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":56},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8861,"byte_end":8881,"line_start":72,"line_end":72,"column_start":9,"column_end":29},"name":"kernel_stack_address","qualname":"::config::Config::kernel_stack_address","value":"core::option::Option<u64>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Create the kernel stack at the given virtual address.","sig":null,"attributes":[{"value":"/ Create the kernel stack at the given virtual address.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8714,"byte_end":8771,"line_start":69,"line_end":69,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8776,"byte_end":8779,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Looks for a free virtual memory region dynamically if not given.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8784,"byte_end":8852,"line_start":71,"line_end":71,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":57},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9051,"byte_end":9068,"line_start":76,"line_end":76,"column_start":9,"column_end":26},"name":"boot_info_address","qualname":"::config::Config::boot_info_address","value":"core::option::Option<u64>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Create the boot information at the given virtual address.","sig":null,"attributes":[{"value":"/ Create the boot information at the given virtual address.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8900,"byte_end":8961,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8966,"byte_end":8969,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Looks for a free virtual memory region dynamically if not given.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":8974,"byte_end":9042,"line_start":75,"line_end":75,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":58},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9185,"byte_end":9200,"line_start":80,"line_end":80,"column_start":9,"column_end":24},"name":"map_framebuffer","qualname":"::config::Config::map_framebuffer","value":"bool","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Whether to map the framebuffer to virtual memory.","sig":null,"attributes":[{"value":"/ Whether to map the framebuffer to virtual memory.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9087,"byte_end":9140,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9145,"byte_end":9148,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9153,"byte_end":9176,"line_start":79,"line_end":79,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":59},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9449,"byte_end":9468,"line_start":86,"line_end":86,"column_start":9,"column_end":28},"name":"framebuffer_address","qualname":"::config::Config::framebuffer_address","value":"core::option::Option<u64>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Map the framebuffer memory at the specified virtual address.","sig":null,"attributes":[{"value":"/ Map the framebuffer memory at the specified virtual address.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9212,"byte_end":9276,"line_start":81,"line_end":81,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9281,"byte_end":9284,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ If not given, the bootloader searches for a free virtual memory region dynamically.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9289,"byte_end":9376,"line_start":83,"line_end":83,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9381,"byte_end":9384,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Only considered if `map_framebuffer` is `true`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9389,"byte_end":9440,"line_start":85,"line_end":85,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":60},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9768,"byte_end":9794,"line_start":92,"line_end":92,"column_start":9,"column_end":35},"name":"minimum_framebuffer_height","qualname":"::config::Config::minimum_framebuffer_height","value":"core::option::Option<usize>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Desired minimum height of the framebuffer mode.","sig":null,"attributes":[{"value":"/ Desired minimum height of the framebuffer mode.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9487,"byte_end":9538,"line_start":87,"line_end":87,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9543,"byte_end":9546,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Defaults to using the default mode if neither `minimum_framebuffer_height` or","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9551,"byte_end":9632,"line_start":89,"line_end":89,"column_start":5,"column_end":86}},{"value":"/ `minimum_framebuffer_width` is supplied, and using the last available mode that","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9637,"byte_end":9720,"line_start":90,"line_end":90,"column_start":5,"column_end":88}},{"value":"/ fits them if 1 or more is set.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9725,"byte_end":9759,"line_start":91,"line_end":91,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":61},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":10095,"byte_end":10120,"line_start":98,"line_end":98,"column_start":9,"column_end":34},"name":"minimum_framebuffer_width","qualname":"::config::Config::minimum_framebuffer_width","value":"core::option::Option<usize>","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":" Desired minimum width of the framebuffer mode.","sig":null,"attributes":[{"value":"/ Desired minimum width of the framebuffer mode.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9815,"byte_end":9865,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9870,"byte_end":9873,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Defaults to using the default mode if neither `minimum_framebuffer_height` or","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9878,"byte_end":9959,"line_start":95,"line_end":95,"column_start":5,"column_end":86}},{"value":"/ `minimum_framebuffer_width` is supplied, and using the last available mode that","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":9964,"byte_end":10047,"line_start":96,"line_end":96,"column_start":5,"column_end":88}},{"value":"/ fits them if 1 or more is set.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/config.rs","byte_start":10052,"byte_end":10086,"line_start":97,"line_end":97,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":11},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"boot_info","qualname":"::boot_info","value":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":64},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":28},{"krate":0,"index":98},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":125},{"krate":0,"index":30},{"krate":0,"index":127},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":36},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47}],"decl_id":null,"docs":" Contains the boot information struct sent by the bootloader to the kernel on startup.\n","sig":null,"attributes":[{"value":"/ Contains the boot information struct sent by the bootloader to the kernel on startup.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":4250,"byte_end":4339,"line_start":79,"line_end":79,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":64},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10963,"byte_end":10971,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"BootInfo","qualname":"::boot_info::BootInfo","value":"BootInfo { version_major, version_minor, version_patch, pre_release, memory_regions, framebuffer, physical_memory_offset, recursive_index, rsdp_addr, tls_template }","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"decl_id":null,"docs":" This structure represents the information that the bootloader passes to the kernel.","sig":null,"attributes":[{"value":"/ This structure represents the information that the bootloader passes to the kernel.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10324,"byte_end":10411,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10412,"byte_end":10415,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The information is passed as an argument to the entry point. The entry point function must","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10416,"byte_end":10510,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ have the following signature:","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10511,"byte_end":10544,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10545,"byte_end":10548,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10549,"byte_end":10556,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ # use bootloader::BootInfo;","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10557,"byte_end":10588,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/ # type _SIGNATURE =","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10589,"byte_end":10612,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/ extern \"C\" fn(boot_info: &'static mut BootInfo) -> !;","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10613,"byte_end":10670,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10671,"byte_end":10678,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10679,"byte_end":10682,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note that no type checking occurs for the entry point function, so be careful to","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10683,"byte_end":10767,"line_start":14,"line_end":14,"column_start":1,"column_end":85}},{"value":"/ use the correct argument types. To ensure that the entry point function has the correct","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10768,"byte_end":10859,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ signature, use the [`entry_point`] macro.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10860,"byte_end":10905,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"repr(C)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10923,"byte_end":10933,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"non_exhaustive","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10934,"byte_end":10951,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":65},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11018,"byte_end":11031,"line_start":22,"line_end":22,"column_start":9,"column_end":22},"name":"version_major","qualname":"::boot_info::BootInfo::version_major","value":"u16","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Bootloader version (major).\n","sig":null,"attributes":[{"value":"/ Bootloader version (major).","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":10978,"byte_end":11009,"line_start":21,"line_end":21,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":66},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11082,"byte_end":11095,"line_start":24,"line_end":24,"column_start":9,"column_end":22},"name":"version_minor","qualname":"::boot_info::BootInfo::version_minor","value":"u16","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Bootloader version (minor).\n","sig":null,"attributes":[{"value":"/ Bootloader version (minor).","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11042,"byte_end":11073,"line_start":23,"line_end":23,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":67},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11146,"byte_end":11159,"line_start":26,"line_end":26,"column_start":9,"column_end":22},"name":"version_patch","qualname":"::boot_info::BootInfo::version_patch","value":"u16","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Bootloader version (patch).\n","sig":null,"attributes":[{"value":"/ Bootloader version (patch).","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11106,"byte_end":11137,"line_start":25,"line_end":25,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":68},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11355,"byte_end":11366,"line_start":31,"line_end":31,"column_start":9,"column_end":20},"name":"pre_release","qualname":"::boot_info::BootInfo::pre_release","value":"bool","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Whether the bootloader version is a pre-release.","sig":null,"attributes":[{"value":"/ Whether the bootloader version is a pre-release.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11170,"byte_end":11222,"line_start":27,"line_end":27,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11227,"byte_end":11230,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ We can't store the full prerelease string of the version number since it could be","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11235,"byte_end":11320,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ arbitrarily long.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11325,"byte_end":11346,"line_start":30,"line_end":30,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":69},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11777,"byte_end":11791,"line_start":38,"line_end":38,"column_start":9,"column_end":23},"name":"memory_regions","qualname":"::boot_info::BootInfo::memory_regions","value":"boot_info::MemoryRegions","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" A map of the physical memory regions of the underlying machine.","sig":null,"attributes":[{"value":"/ A map of the physical memory regions of the underlying machine.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11378,"byte_end":11445,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11450,"byte_end":11453,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The bootloader queries this information from the BIOS/UEFI firmware and translates this","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11458,"byte_end":11549,"line_start":34,"line_end":34,"column_start":5,"column_end":96}},{"value":"/ information to Rust types. It also marks any memory regions that the bootloader uses in","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11554,"byte_end":11645,"line_start":35,"line_end":35,"column_start":5,"column_end":96}},{"value":"/ the memory map before passing it to the kernel. Regions marked as usable can be freely","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11650,"byte_end":11740,"line_start":36,"line_end":36,"column_start":5,"column_end":95}},{"value":"/ used by the kernel.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11745,"byte_end":11768,"line_start":37,"line_end":37,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":70},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11890,"byte_end":11901,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"framebuffer","qualname":"::boot_info::BootInfo::framebuffer","value":"boot_info::Optional<boot_info::FrameBuffer>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Information about the framebuffer for screen output if available.\n","sig":null,"attributes":[{"value":"/ Information about the framebuffer for screen output if available.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11812,"byte_end":11881,"line_start":39,"line_end":39,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":71},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12542,"byte_end":12564,"line_start":51,"line_end":51,"column_start":9,"column_end":31},"name":"physical_memory_offset","qualname":"::boot_info::BootInfo::physical_memory_offset","value":"boot_info::Optional<u64>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" The virtual address at which the mapping of the physical memory starts.","sig":null,"attributes":[{"value":"/ The virtual address at which the mapping of the physical memory starts.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":11930,"byte_end":12005,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12010,"byte_end":12013,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Physical addresses can be converted to virtual addresses by adding this offset to them.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12018,"byte_end":12109,"line_start":43,"line_end":43,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12114,"byte_end":12117,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The mapping of the physical memory allows to access arbitrary physical frames. Accessing","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12122,"byte_end":12214,"line_start":45,"line_end":45,"column_start":5,"column_end":97}},{"value":"/ frames that are also mapped at other virtual addresses can easily break memory safety and","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12219,"byte_end":12312,"line_start":46,"line_end":46,"column_start":5,"column_end":98}},{"value":"/ cause undefined behavior. Only frames reported as `USABLE` by the memory map in the `BootInfo`","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12317,"byte_end":12415,"line_start":47,"line_end":47,"column_start":5,"column_end":103}},{"value":"/ can be safely accessed.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12420,"byte_end":12447,"line_start":48,"line_end":48,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12452,"byte_end":12455,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Only available if the `map-physical-memory` config option is enabled.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12460,"byte_end":12533,"line_start":50,"line_end":50,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":72},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12756,"byte_end":12771,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"name":"recursive_index","qualname":"::boot_info::BootInfo::recursive_index","value":"boot_info::Optional<u16>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" The virtual address of the recursively mapped level 4 page table.","sig":null,"attributes":[{"value":"/ The virtual address of the recursively mapped level 4 page table.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12585,"byte_end":12654,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12659,"byte_end":12662,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Only available if the `map-page-table-recursively` config option is enabled.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12667,"byte_end":12747,"line_start":54,"line_end":54,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":73},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12983,"byte_end":12992,"line_start":59,"line_end":59,"column_start":9,"column_end":18},"name":"rsdp_addr","qualname":"::boot_info::BootInfo::rsdp_addr","value":"boot_info::Optional<u64>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" The address of the `RSDP` data structure, which can be use to find the ACPI tables.","sig":null,"attributes":[{"value":"/ The address of the `RSDP` data structure, which can be use to find the ACPI tables.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12792,"byte_end":12879,"line_start":56,"line_end":56,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12884,"byte_end":12887,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This field is `None` if no `RSDP` was found (for BIOS) or reported (for UEFI).","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":12892,"byte_end":12974,"line_start":58,"line_end":58,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":74},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13103,"byte_end":13115,"line_start":61,"line_end":61,"column_start":9,"column_end":21},"name":"tls_template","qualname":"::boot_info::BootInfo::tls_template","value":"boot_info::Optional<boot_info::TlsTemplate>","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" The thread local storage (TLS) template of the kernel executable, if present.\n","sig":null,"attributes":[{"value":"/ The thread local storage (TLS) template of the kernel executable, if present.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13013,"byte_end":13094,"line_start":60,"line_end":60,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13566,"byte_end":13579,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"MemoryRegions","qualname":"::boot_info::MemoryRegions","value":"MemoryRegions {  }","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":" FFI-safe slice of [`MemoryRegion`] structs, semantically equivalent to\n `&'static mut [MemoryRegion]`.","sig":null,"attributes":[{"value":"/ FFI-safe slice of [`MemoryRegion`] structs, semantically equivalent to","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13143,"byte_end":13217,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ `&'static mut [MemoryRegion]`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13218,"byte_end":13252,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13253,"byte_end":13256,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ This type implements the [`Deref`][core::ops::Deref] and [`DerefMut`][core::ops::DerefMut]","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13257,"byte_end":13351,"line_start":67,"line_end":67,"column_start":1,"column_end":95}},{"value":"/ traits, so it can be used like a `&mut [MemoryRegion]` slice. It also implements [`From`]","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13352,"byte_end":13445,"line_start":68,"line_end":68,"column_start":1,"column_end":94}},{"value":"/ and [`Into`] for easy conversions from and to `&'static mut [MemoryRegion]`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13446,"byte_end":13526,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"repr(C)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13544,"byte_end":13554,"line_start":71,"line_end":71,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13729,"byte_end":13734,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"deref","qualname":"<MemoryRegions as core::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &Self::Target","parent":{"krate":1,"index":3459},"children":[],"decl_id":{"krate":1,"index":3461},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13877,"byte_end":13886,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MemoryRegions as core::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &mut Self::Target","parent":{"krate":1,"index":3472},"children":[],"decl_id":{"krate":1,"index":3473},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14061,"byte_end":14065,"line_start":92,"line_end":92,"column_start":8,"column_end":12},"name":"from","qualname":"<MemoryRegions as core::convert::From>::from","value":"fn from(&'static mut [MemoryRegion]) -> Self","parent":{"krate":1,"index":3146},"children":[],"decl_id":{"krate":1,"index":3148},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14294,"byte_end":14298,"line_start":101,"line_end":101,"column_start":8,"column_end":12},"name":"from","qualname":"<&'static mut [MemoryRegion] as core::convert::From>::from","value":"fn from(MemoryRegions) -> &'static mut [MemoryRegion]","parent":{"krate":1,"index":3146},"children":[],"decl_id":{"krate":1,"index":3148},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":82},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14543,"byte_end":14555,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"MemoryRegion","qualname":"::boot_info::MemoryRegion","value":"MemoryRegion { start, end, kind }","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"decl_id":null,"docs":" Represent a physical memory region.\n","sig":null,"attributes":[{"value":"/ Represent a physical memory region.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14436,"byte_end":14475,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"repr(C)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14521,"byte_end":14531,"line_start":108,"line_end":108,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":83},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14616,"byte_end":14621,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"name":"start","qualname":"::boot_info::MemoryRegion::start","value":"u64","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" The physical start address of the region.\n","sig":null,"attributes":[{"value":"/ The physical start address of the region.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14562,"byte_end":14607,"line_start":110,"line_end":110,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":84},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14696,"byte_end":14699,"line_start":113,"line_end":113,"column_start":9,"column_end":12},"name":"end","qualname":"::boot_info::MemoryRegion::end","value":"u64","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" The physical end address (exclusive) of the region.\n","sig":null,"attributes":[{"value":"/ The physical end address (exclusive) of the region.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14632,"byte_end":14687,"line_start":112,"line_end":112,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":85},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14846,"byte_end":14850,"line_start":117,"line_end":117,"column_start":9,"column_end":13},"name":"kind","qualname":"::boot_info::MemoryRegion::kind","value":"boot_info::MemoryRegionKind","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" The memory type of the memory region.","sig":null,"attributes":[{"value":"/ The memory type of the memory region.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14710,"byte_end":14751,"line_start":114,"line_end":114,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14756,"byte_end":14759,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Only [`Usable`][MemoryRegionKind::Usable] regions can be freely used.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14764,"byte_end":14837,"line_start":116,"line_end":116,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14969,"byte_end":14974,"line_start":122,"line_end":122,"column_start":18,"column_end":23},"name":"empty","qualname":"<MemoryRegion>::empty","value":"const fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty memory region (with length 0).\n","sig":null,"attributes":[{"value":"/ Creates a new empty memory region (with length 0).","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14897,"byte_end":14951,"line_start":121,"line_end":121,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":99},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15334,"byte_end":15340,"line_start":137,"line_end":137,"column_start":5,"column_end":11},"name":"Usable","qualname":"::boot_info::MemoryRegionKind::Usable","value":"MemoryRegionKind::Usable","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" Unused conventional memory, can be used by the kernel.\n","sig":null,"attributes":[{"value":"/ Unused conventional memory, can be used by the kernel.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15271,"byte_end":15329,"line_start":136,"line_end":136,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":101},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15506,"byte_end":15516,"line_start":141,"line_end":141,"column_start":5,"column_end":15},"name":"Bootloader","qualname":"::boot_info::MemoryRegionKind::Bootloader","value":"MemoryRegionKind::Bootloader","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" Memory mappings created by the bootloader, including the kernel and boot info mappings.","sig":null,"attributes":[{"value":"/ Memory mappings created by the bootloader, including the kernel and boot info mappings.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15346,"byte_end":15437,"line_start":138,"line_end":138,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15442,"byte_end":15445,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This memory should _not_ be used by the kernel.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15450,"byte_end":15501,"line_start":140,"line_end":140,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":103},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15671,"byte_end":15682,"line_start":145,"line_end":145,"column_start":5,"column_end":16},"name":"UnknownUefi","qualname":"::boot_info::MemoryRegionKind::UnknownUefi","value":"MemoryRegionKind::UnknownUefi(u32)","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" An unknown memory region reported by the UEFI firmware.","sig":null,"attributes":[{"value":"/ An unknown memory region reported by the UEFI firmware.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15522,"byte_end":15581,"line_start":142,"line_end":142,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15586,"byte_end":15589,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This should only be used if the UEFI memory type is known as usable.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15594,"byte_end":15666,"line_start":144,"line_end":144,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15683,"byte_end":15686,"line_start":145,"line_end":145,"column_start":17,"column_end":20},"name":"0","qualname":"::boot_info::MemoryRegionKind::UnknownUefi::0","value":"u32","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":106},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15842,"byte_end":15853,"line_start":149,"line_end":149,"column_start":5,"column_end":16},"name":"UnknownBios","qualname":"::boot_info::MemoryRegionKind::UnknownBios","value":"MemoryRegionKind::UnknownBios(u32)","parent":{"krate":0,"index":98},"children":[],"decl_id":null,"docs":" An unknown memory region reported by the BIOS firmware.","sig":null,"attributes":[{"value":"/ An unknown memory region reported by the BIOS firmware.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15693,"byte_end":15752,"line_start":146,"line_end":146,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15757,"byte_end":15760,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This should only be used if the BIOS memory type is known as usable.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15765,"byte_end":15837,"line_start":148,"line_end":148,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15854,"byte_end":15857,"line_start":149,"line_end":149,"column_start":17,"column_end":20},"name":"0","qualname":"::boot_info::MemoryRegionKind::UnknownBios::0","value":"u32","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":98},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15248,"byte_end":15264,"line_start":135,"line_end":135,"column_start":10,"column_end":26},"name":"MemoryRegionKind","qualname":"::boot_info::MemoryRegionKind","value":"enum MemoryRegionKind {\n    Usable,\n    Bootloader,\n    UnknownUefi(u32),\n    UnknownBios(u32),\n}","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":106}],"decl_id":null,"docs":" Represents the different types of memory.\n","sig":null,"attributes":[{"value":"/ Represents the different types of memory.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15119,"byte_end":15164,"line_start":131,"line_end":131,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15210,"byte_end":15227,"line_start":133,"line_end":133,"column_start":1,"column_end":18}},{"value":"repr(C)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15228,"byte_end":15238,"line_start":134,"line_end":134,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":121},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15965,"byte_end":15976,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"FrameBuffer","qualname":"::boot_info::FrameBuffer","value":"FrameBuffer {  }","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":" A pixel-based framebuffer that controls the screen output.\n","sig":null,"attributes":[{"value":"/ A pixel-based framebuffer that controls the screen output.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15863,"byte_end":15925,"line_start":152,"line_end":152,"column_start":1,"column_end":63}},{"value":"repr(C)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":15943,"byte_end":15953,"line_start":154,"line_end":154,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16182,"byte_end":16188,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"buffer","qualname":"<FrameBuffer>::buffer","value":"fn buffer<'_>(&'_ Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw bytes of the framebuffer as slice.\n","sig":null,"attributes":[{"value":"/ Returns the raw bytes of the framebuffer as slice.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16116,"byte_end":16170,"line_start":162,"line_end":162,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16332,"byte_end":16342,"line_start":168,"line_end":168,"column_start":12,"column_end":22},"name":"buffer_mut","qualname":"<FrameBuffer>::buffer_mut","value":"fn buffer_mut<'_>(&'_ mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw bytes of the framebuffer as mutable slice.\n","sig":null,"attributes":[{"value":"/ Returns the raw bytes of the framebuffer as mutable slice.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16258,"byte_end":16320,"line_start":167,"line_end":167,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16660,"byte_end":16664,"line_start":177,"line_end":177,"column_start":12,"column_end":16},"name":"info","qualname":"<FrameBuffer>::info","value":"fn info<'_>(&'_ Self) -> FrameBufferInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns layout and pixel format information of the framebuffer.\n","sig":null,"attributes":[{"value":"/ Returns layout and pixel format information of the framebuffer.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16581,"byte_end":16648,"line_start":176,"line_end":176,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":127},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16832,"byte_end":16847,"line_start":185,"line_end":185,"column_start":12,"column_end":27},"name":"FrameBufferInfo","qualname":"::boot_info::FrameBufferInfo","value":"FrameBufferInfo { byte_len, horizontal_resolution, vertical_resolution, pixel_format, bytes_per_pixel, stride }","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"decl_id":null,"docs":" Describes the layout and pixel format of a framebuffer.\n","sig":null,"attributes":[{"value":"/ Describes the layout and pixel format of a framebuffer.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16720,"byte_end":16779,"line_start":182,"line_end":182,"column_start":1,"column_end":60}},{"value":"repr(C)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16810,"byte_end":16820,"line_start":184,"line_end":184,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":128},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16891,"byte_end":16899,"line_start":187,"line_end":187,"column_start":9,"column_end":17},"name":"byte_len","qualname":"::boot_info::FrameBufferInfo::byte_len","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The total size in bytes.\n","sig":null,"attributes":[{"value":"/ The total size in bytes.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16854,"byte_end":16882,"line_start":186,"line_end":186,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":129},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16945,"byte_end":16966,"line_start":189,"line_end":189,"column_start":9,"column_end":30},"name":"horizontal_resolution","qualname":"::boot_info::FrameBufferInfo::horizontal_resolution","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The width in pixels.\n","sig":null,"attributes":[{"value":"/ The width in pixels.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16912,"byte_end":16936,"line_start":188,"line_end":188,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":130},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17013,"byte_end":17032,"line_start":191,"line_end":191,"column_start":9,"column_end":28},"name":"vertical_resolution","qualname":"::boot_info::FrameBufferInfo::vertical_resolution","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The height in pixels.\n","sig":null,"attributes":[{"value":"/ The height in pixels.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16979,"byte_end":17004,"line_start":190,"line_end":190,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":131},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17089,"byte_end":17101,"line_start":193,"line_end":193,"column_start":9,"column_end":21},"name":"pixel_format","qualname":"::boot_info::FrameBufferInfo::pixel_format","value":"boot_info::PixelFormat","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The color format of each pixel.\n","sig":null,"attributes":[{"value":"/ The color format of each pixel.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17045,"byte_end":17080,"line_start":192,"line_end":192,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":132},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17163,"byte_end":17178,"line_start":195,"line_end":195,"column_start":9,"column_end":24},"name":"bytes_per_pixel","qualname":"::boot_info::FrameBufferInfo::bytes_per_pixel","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The number of bytes per pixel.\n","sig":null,"attributes":[{"value":"/ The number of bytes per pixel.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17120,"byte_end":17154,"line_start":194,"line_end":194,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":133},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17521,"byte_end":17527,"line_start":201,"line_end":201,"column_start":9,"column_end":15},"name":"stride","qualname":"::boot_info::FrameBufferInfo::stride","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Number of pixels between the start of a line and the start of the next.","sig":null,"attributes":[{"value":"/ Number of pixels between the start of a line and the start of the next.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17191,"byte_end":17266,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17271,"byte_end":17274,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Some framebuffers use additional padding at the end of a line, so this","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17279,"byte_end":17353,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ value might be larger than `horizontal_resolution`. It is","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17358,"byte_end":17419,"line_start":199,"line_end":199,"column_start":5,"column_end":66}},{"value":"/ therefore recommended to use this field for calculating the start address of a line.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17424,"byte_end":17512,"line_start":200,"line_end":200,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":140},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17875,"byte_end":17878,"line_start":213,"line_end":213,"column_start":5,"column_end":8},"name":"RGB","qualname":"::boot_info::PixelFormat::RGB","value":"PixelFormat::RGB","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" One byte red, then one byte green, then one byte blue.","sig":null,"attributes":[{"value":"/ One byte red, then one byte green, then one byte blue.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17687,"byte_end":17745,"line_start":209,"line_end":209,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17750,"byte_end":17753,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Length might be larger than 3, check [`bytes_per_pixel`][FrameBufferInfo::bytes_per_pixel]","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17758,"byte_end":17852,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/ for this.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17857,"byte_end":17870,"line_start":212,"line_end":212,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":142},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18072,"byte_end":18075,"line_start":218,"line_end":218,"column_start":5,"column_end":8},"name":"BGR","qualname":"::boot_info::PixelFormat::BGR","value":"PixelFormat::BGR","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" One byte blue, then one byte green, then one byte red.","sig":null,"attributes":[{"value":"/ One byte blue, then one byte green, then one byte red.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17884,"byte_end":17942,"line_start":214,"line_end":214,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17947,"byte_end":17950,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Length might be larger than 3, check [`bytes_per_pixel`][FrameBufferInfo::bytes_per_pixel]","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17955,"byte_end":18049,"line_start":216,"line_end":216,"column_start":5,"column_end":99}},{"value":"/ for this.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18054,"byte_end":18067,"line_start":217,"line_end":217,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":144},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18263,"byte_end":18265,"line_start":223,"line_end":223,"column_start":5,"column_end":7},"name":"U8","qualname":"::boot_info::PixelFormat::U8","value":"PixelFormat::U8","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" A single byte, representing the grayscale value.","sig":null,"attributes":[{"value":"/ A single byte, representing the grayscale value.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18081,"byte_end":18133,"line_start":219,"line_end":219,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18138,"byte_end":18141,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Length might be larger than 1, check [`bytes_per_pixel`][FrameBufferInfo::bytes_per_pixel]","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18146,"byte_end":18240,"line_start":221,"line_end":221,"column_start":5,"column_end":99}},{"value":"/ for this.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18245,"byte_end":18258,"line_start":222,"line_end":222,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":139},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17669,"byte_end":17680,"line_start":208,"line_end":208,"column_start":10,"column_end":21},"name":"PixelFormat","qualname":"::boot_info::PixelFormat","value":"enum PixelFormat { RGB, BGR, U8, }","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144}],"decl_id":null,"docs":" Color format of pixels in the framebuffer.\n","sig":null,"attributes":[{"value":"/ Color format of pixels in the framebuffer.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17539,"byte_end":17585,"line_start":204,"line_end":204,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17631,"byte_end":17648,"line_start":206,"line_end":206,"column_start":1,"column_end":18}},{"value":"repr(C)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":17649,"byte_end":17659,"line_start":207,"line_end":207,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18734,"byte_end":18745,"line_start":235,"line_end":235,"column_start":12,"column_end":23},"name":"TlsTemplate","qualname":"::boot_info::TlsTemplate","value":"TlsTemplate { start_addr, file_size, mem_size }","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"decl_id":null,"docs":" Information about the thread local storage (TLS) template.","sig":null,"attributes":[{"value":"/ Information about the thread local storage (TLS) template.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18270,"byte_end":18332,"line_start":226,"line_end":226,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18333,"byte_end":18336,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ This template can be used to set up thread local storage for threads. For","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18337,"byte_end":18414,"line_start":228,"line_end":228,"column_start":1,"column_end":78}},{"value":"/ each thread, a new memory location of size `mem_size` must be initialized.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18415,"byte_end":18493,"line_start":229,"line_end":229,"column_start":1,"column_end":79}},{"value":"/ Then the first `file_size` bytes of this template needs to be copied to the","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18494,"byte_end":18573,"line_start":230,"line_end":230,"column_start":1,"column_end":80}},{"value":"/ location. The additional `mem_size - file_size` bytes must be initialized with","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18574,"byte_end":18656,"line_start":231,"line_end":231,"column_start":1,"column_end":83}},{"value":"/ zero.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18657,"byte_end":18666,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"repr(C)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18712,"byte_end":18722,"line_start":234,"line_end":234,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":158},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18828,"byte_end":18838,"line_start":237,"line_end":237,"column_start":9,"column_end":19},"name":"start_addr","qualname":"::boot_info::TlsTemplate::start_addr","value":"u64","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" The virtual start address of the thread local storage template.\n","sig":null,"attributes":[{"value":"/ The virtual start address of the thread local storage template.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18752,"byte_end":18819,"line_start":236,"line_end":236,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":159},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18970,"byte_end":18979,"line_start":241,"line_end":241,"column_start":9,"column_end":18},"name":"file_size","qualname":"::boot_info::TlsTemplate::file_size","value":"u64","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" The number of data bytes in the template.","sig":null,"attributes":[{"value":"/ The number of data bytes in the template.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18849,"byte_end":18894,"line_start":238,"line_end":238,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18899,"byte_end":18902,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Corresponds to the length of the `.tdata` section.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18907,"byte_end":18961,"line_start":240,"line_end":240,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":160},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19161,"byte_end":19169,"line_start":245,"line_end":245,"column_start":9,"column_end":17},"name":"mem_size","qualname":"::boot_info::TlsTemplate::mem_size","value":"u64","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" The total number of bytes that the TLS segment should have in memory.","sig":null,"attributes":[{"value":"/ The total number of bytes that the TLS segment should have in memory.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":18990,"byte_end":19063,"line_start":242,"line_end":242,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19068,"byte_end":19071,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Corresponds to the combined length of the `.tdata` and `.tbss` sections.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19076,"byte_end":19152,"line_start":244,"line_end":244,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":175},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19440,"byte_end":19444,"line_start":255,"line_end":255,"column_start":5,"column_end":9},"name":"Some","qualname":"::boot_info::Optional::Some","value":"Optional::Some(T)","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" Some value `T`\n","sig":null,"attributes":[{"value":"/ Some value `T`","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19417,"byte_end":19435,"line_start":254,"line_end":254,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":177},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19445,"byte_end":19446,"line_start":255,"line_end":255,"column_start":10,"column_end":11},"name":"0","qualname":"::boot_info::Optional::Some::0","value":"T","parent":{"krate":0,"index":175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":178},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19470,"byte_end":19474,"line_start":257,"line_end":257,"column_start":5,"column_end":9},"name":"None","qualname":"::boot_info::Optional::None","value":"Optional::None","parent":{"krate":0,"index":173},"children":[],"decl_id":null,"docs":" No value\n","sig":null,"attributes":[{"value":"/ No value","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19453,"byte_end":19465,"line_start":256,"line_end":256,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":173},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19399,"byte_end":19407,"line_start":253,"line_end":253,"column_start":10,"column_end":18},"name":"Optional","qualname":"::boot_info::Optional","value":"enum Optional<T> { Some(T), None, }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":178}],"decl_id":null,"docs":" FFI-safe variant of [`Option`].","sig":null,"attributes":[{"value":"/ FFI-safe variant of [`Option`].","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19179,"byte_end":19214,"line_start":248,"line_end":248,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19215,"byte_end":19218,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Implements the [`From`] and [`Into`] traits for easy conversion to and from [`Option`].","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19219,"byte_end":19310,"line_start":250,"line_end":250,"column_start":1,"column_end":92}},{"value":"repr(C)","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19379,"byte_end":19389,"line_start":252,"line_end":252,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19562,"byte_end":19573,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"into_option","qualname":"<Optional<T>>::into_option","value":"fn into_option(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the `Optional` to an [`Option`].\n","sig":null,"attributes":[{"value":"/ Converts the `Optional` to an [`Option`].","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19505,"byte_end":19550,"line_start":261,"line_end":261,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19812,"byte_end":19818,"line_start":270,"line_end":270,"column_start":18,"column_end":24},"name":"as_ref","qualname":"<Optional<T>>::as_ref","value":"const fn as_ref<'_>(&'_ Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&Optional<T>` to `Option<&T>`.","sig":null,"attributes":[{"value":"/ Converts from `&Optional<T>` to `Option<&T>`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19626,"byte_end":19675,"line_start":266,"line_end":266,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19680,"byte_end":19683,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ For convenience, this method directly performs the conversion to the standard","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19688,"byte_end":19769,"line_start":268,"line_end":268,"column_start":5,"column_end":86}},{"value":"/ [`Option`] type.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19774,"byte_end":19794,"line_start":269,"line_end":269,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":20142,"byte_end":20148,"line_start":281,"line_end":281,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Optional<T>>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut Optional<T>` to `Option<&mut T>`.","sig":null,"attributes":[{"value":"/ Converts from `&mut Optional<T>` to `Option<&mut T>`.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19954,"byte_end":20011,"line_start":277,"line_end":277,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":20016,"byte_end":20019,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ For convenience, this method directly performs the conversion to the standard","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":20024,"byte_end":20105,"line_start":279,"line_end":279,"column_start":5,"column_end":86}},{"value":"/ [`Option`] type.","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":20110,"byte_end":20130,"line_start":280,"line_end":280,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":20339,"byte_end":20343,"line_start":290,"line_end":290,"column_start":8,"column_end":12},"name":"from","qualname":"<Optional<T> as core::convert::From>::from","value":"fn from(Option<T>) -> Self","parent":{"krate":1,"index":3146},"children":[],"decl_id":{"krate":1,"index":3148},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":20532,"byte_end":20536,"line_start":299,"line_end":299,"column_start":8,"column_end":12},"name":"from","qualname":"<Option<T> as core::convert::From>::from","value":"fn from(Optional<T>) -> Option<T>","parent":{"krate":1,"index":3146},"children":[],"decl_id":{"krate":1,"index":3148},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13671,"byte_end":13684,"line_start":77,"line_end":77,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13854,"byte_end":13867,"line_start":85,"line_end":85,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14038,"byte_end":14051,"line_start":91,"line_end":91,"column_start":44,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14878,"byte_end":14890,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16098,"byte_end":16109,"line_start":161,"line_end":161,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19487,"byte_end":19495,"line_start":260,"line_end":260,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":20318,"byte_end":20326,"line_start":289,"line_end":289,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":20513,"byte_end":20519,"line_start":298,"line_end":298,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/lib.rs","byte_start":4348,"byte_end":4357,"line_start":80,"line_end":80,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":11}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13671,"byte_end":13684,"line_start":77,"line_end":77,"column_start":21,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":3459}},{"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":13854,"byte_end":13867,"line_start":85,"line_end":85,"column_start":24,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":3472}},{"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14038,"byte_end":14051,"line_start":91,"line_end":91,"column_start":44,"column_end":57},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":3146}},{"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":14878,"byte_end":14890,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":82},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":16098,"byte_end":16109,"line_start":161,"line_end":161,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":19487,"byte_end":19495,"line_start":260,"line_end":260,"column_start":9,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":20318,"byte_end":20326,"line_start":289,"line_end":289,"column_start":29,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":173},"to":{"krate":1,"index":3146}},{"span":{"file_name":"/Users/raghav/.cargo/registry/src/github.com-1ecc6299db9ec823/bootloader-0.10.12/src/boot_info.rs","byte_start":20513,"byte_end":20519,"line_start":298,"line_end":298,"column_start":31,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":47358},"to":{"krate":1,"index":3146}}]}